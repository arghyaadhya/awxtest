#!/bin/bash

# Usage: ./script.sh <file> <hostname_to_match>
# Example: ./script.sh config.txt test-1234-001.static.test.com

CONFIG_FILE="$1"
HOSTNAME="$2"

if [[ -z "$CONFIG_FILE" || -z "$HOSTNAME" ]]; then
  echo "Usage: $0 <file> <hostname_to_match>"
  exit 1
fi

# Backup the original file
cp "$CONFIG_FILE" "${CONFIG_FILE}.bak"

awk -v host="$HOSTNAME" '
  BEGIN {
    block_active = 0;
    delete_block = 0;
    output_block = "";
  }

  # Start of a block
  /^Begin Limit$/ {
    block_active = 1;
    delete_block = 0;
    output_block = $0 "\n";
    next;
  }

  # Process lines inside a block
  block_active {
    output_block = output_block $0 "\n";

    # If the line starts with "HOST=", process it
    if ($1 == "HOST=") {
      split($2, hosts, " ");
      remaining_hosts = "";
      found_host = 0;
      host_count = length(hosts);

      # Iterate over the hosts and handle deletion
      for (i in hosts) {
        if (hosts[i] == host) {
          found_host = 1;
        } else {
          remaining_hosts = remaining_hosts (remaining_hosts == "" ? "" : " ") hosts[i];
        }
      }

      # Case 1: Single host matches; mark block for deletion
      if (found_host && host_count == 1) {
        delete_block = 1;
      } else if (found_host) {
        # Case 2: Update HOST line with remaining hosts
        $0 = "HOST=" remaining_hosts;
        output_block = gensub(/HOST=.*/, $0, "g", output_block);
      }
    }
    next;
  }

  # End of a block
  /^End Limit$/ {
    if (block_active) {
      output_block = output_block $0 "\n";
      # Print the block unless it's marked for deletion
      if (!delete_block) {
        printf "%s", output_block;
      }
      # Reset state for the next block
      block_active = 0;
      output_block = "";
    }
    next;
  }

  # Lines outside of blocks
  {
    print $0;
  }
' "$CONFIG_FILE" > "${CONFIG_FILE}.tmp" && mv "${CONFIG_FILE}.tmp" "$CONFIG_FILE"

echo "Processing completed. Backup saved as ${CONFIG_FILE}.bak."
