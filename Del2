#!/bin/bash

# Usage: ./script.sh <input_file> <hostname_to_match>
# Example: ./script.sh config.txt test-1234-002.static.test.com

CONFIG_FILE="$1"
HOSTNAME="$2"

if [[ -z "$CONFIG_FILE" || -z "$HOSTNAME" ]]; then
  echo "Usage: $0 <input_file> <hostname_to_match>"
  exit 1
fi

# Backup the input file
cp "$CONFIG_FILE" "${CONFIG_FILE}.bak"

awk -v host="$HOSTNAME" '
  BEGIN {
    block_active = 0;  # Track if inside a block
    delete_block = 0;  # Mark block for deletion
  }

  # Begin Limit - start of a block
  /^Begin Limit$/ {
    block_active = 1;
    delete_block = 0;
    block_content = $0 "\n";  # Collect the block content
    next;
  }

  # Process lines inside a block
  block_active {
    block_content = block_content $0 "\n";  # Add current line to block content

    # Identify the HOST= line
    if ($1 == "HOST=") {
      split($2, hosts, " ");  # Split hostnames into array
      remaining_hosts = "";   # Store remaining hosts
      found_host = 0;         # Flag for target hostname
      host_count = length(hosts);  # Number of hosts

      # Check each host
      for (i in hosts) {
        if (hosts[i] == host) {
          found_host = 1;  # Mark the matched hostname
        } else {
          remaining_hosts = remaining_hosts (remaining_hosts == "" ? "" : " ") hosts[i];
        }
      }

      # Case 1: Host matches and is the only host, delete the entire block
      if (found_host && remaining_hosts == "") {
        delete_block = 1;
      }
      # Case 2: Host matches but there are remaining hosts
      else if (found_host) {
        $0 = "HOST=" remaining_hosts;  # Update HOST line
      }
    }

    next;
  }

  # End Limit - end of a block
  /^End Limit$/ {
    block_content = block_content $0 "\n";  # Append End Limit to block content

    # Print the block if not marked for deletion
    if (!delete_block) {
      printf "%s", block_content;
    }

    # Reset block tracking variables
    block_active = 0;
    block_content = "";
    next;
  }

  # Lines outside blocks
  {
    print $0;
  }
' "$CONFIG_FILE" > "${CONFIG_FILE}.tmp" && mv "${CONFIG_FILE}.tmp" "$CONFIG_FILE"

echo "Processing completed. Backup saved as ${CONFIG_FILE}.bak."
