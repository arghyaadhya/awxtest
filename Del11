#!/bin/bash

# Input file containing the content
INPUT_FILE="input.txt"
OUTPUT_FILE="output.txt"

# Hostname(s) to check passed as a variable
MATCHED_HOSTS=("test-1234-001.static.test.com" "test-1234-002.static.test.com")

# Temporary variables to track state
inside_block=false
block_content=()
should_delete=false

# Process each line of the input file
while IFS= read -r line; do
    if [[ "$line" == "Begin Limit" ]]; then
        inside_block=true
        block_content=("$line")
        should_delete=false
    elif [[ "$line" == "End Limit" && $inside_block == true ]]; then
        block_content+=("$line")
        inside_block=false

        # Process the collected block
        if [[ $should_delete == true ]]; then
            continue # Skip adding the block to the output
        else
            printf "%s\n" "${block_content[@]}" >> "$OUTPUT_FILE"
        fi
    elif $inside_block; then
        block_content+=("$line")
        if [[ "$line" =~ ^HOST=.* ]]; then
            hosts=$(echo "$line" | sed -E 's/^HOST=//')
            hosts_array=($hosts)

            # Check for matches with the specified MATCHED_HOSTS
            matches=0
            for h in "${hosts_array[@]}"; do
                for matched_host in "${MATCHED_HOSTS[@]}"; do
                    if [[ "$h" == "$matched_host" ]]; then
                        ((matches++))
                    fi
                done
            done

            if [[ "$matches" -eq 1 ]]; then
                should_delete=true
            elif [[ "$matches" -ge 2 ]]; then
                # Skip deletion and exit if multiple matches are found
                should_delete=false
            fi
        fi
    else
        echo "$line" >> "$OUTPUT_FILE"
    fi
done < "$INPUT_FILE"

# Replace the input file with the processed output file
mv "$OUTPUT_FILE" "$INPUT_FILE"
echo "Processing complete. Updated file saved."
