#!/bin/bash

# Input and Output Files
input_file="input.txt"
output_file="output.txt"

# Hostname to match
hostname="your_hostname"

# Variables for block handling
in_block=false        # Tracks if we are inside a block
block_lines=()        # Array to store lines in the block

# Function to process a block
process_block() {
    block_only_hostname=true   # Flag for checking block content
    processed_lines=()         # Array for storing processed block

    for line in "${block_lines[@]}"; do
        if [[ $line =~ $hostname ]]; then
            # If the line contains the hostname
            modified_line=$(echo "$line" | sed "s/\b$hostname\b//g" | sed 's/[[:space:]]\+/ /g' | sed 's/^[[:space:]]*//g' | sed 's/[[:space:]]*$//g')
            if [[ -n $modified_line ]]; then
                processed_lines+=("$modified_line")
                block_only_hostname=false
            fi
        else
            # Add the line to processed_lines if it doesn't match the hostname
            processed_lines+=("$line")
            if [[ $line != "Begin limit" && $line != "End limit" && -n $line ]]; then
                block_only_hostname=false
            fi
        fi
    done

    # Print the processed block or skip it
    if $block_only_hostname; then
        return # Skip the block entirely
    fi

    # Print all processed lines
    for line in "${processed_lines[@]}"; do
        echo "$line"
    done
}

# Main Loop for Processing Input File
while IFS= read -r line || [[ -n $line ]]; do
    if [[ $line == "Begin limit" ]]; then
        in_block=true
        block_lines=("$line") # Start a new block
    elif [[ $line == "End limit" ]]; then
        in_block=false
        block_lines+=("$line") # End the block
        process_block          # Process the collected block
        block_lines=()         # Reset block_lines for the next block
    elif $in_block; then
        block_lines+=("$line") # Add line to the current block
    else
        echo "$line"           # Print non-block lines directly
    fi
done < "$input_file" > "$output_file"

echo "Processed file saved to $output_file."
