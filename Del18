#!/bin/bash

# Input and Output Files
input_file="input.txt"
output_file="output.txt"

# Hostname to match
hostname="test-1234-001.static.test.com"

# Variables for block handling
in_block=false          # Tracks whether we're inside a block
block_lines=()          # Array to store the current block lines

# Function to process a block
process_block() {
    block_has_multiple_hosts=false
    block_only_hostname=false
    processed_lines=()
    hosts_line=""

    for line in "${block_lines[@]}"; do
        if [[ $line =~ ^HOST=.*$ ]]; then
            # Extract hostnames in the HOST line
            hosts_line="$line"
            hosts=$(echo "$line" | sed -E 's/^HOST=//')
            hosts=($hosts) # Convert space-separated hostnames to an array

            if [[ " ${hosts[@]} " =~ " $hostname " ]]; then
                if [[ ${#hosts[@]} -eq 1 ]]; then
                    block_only_hostname=true
                else
                    # Remove the matched hostname and update the line
                    updated_hosts=$(echo "${hosts[@]}" | sed -E "s/(^| )$hostname($| )/ /" | tr -s ' ')
                    hosts_line="HOST=$updated_hosts"
                fi
            fi

            # Check if multiple hostnames exist (after potential modification)
            if [[ $(echo "$hosts_line" | wc -w) -gt 1 ]]; then
                block_has_multiple_hosts=true
            fi
        else
            processed_lines+=("$line")
        fi
    done

    # Decide whether to print or skip the block
    if $block_only_hostname; then
        return # Skip the entire block
    else
        # Output processed lines
        for line in "${processed_lines[@]}"; do
            echo "$line"
        done

        # Print the modified HOST line (if applicable)
        if [[ -n $hosts_line ]]; then
            echo "$hosts_line"
        fi
    fi
}

# Main processing loop
while IFS= read -r line || [[ -n $line ]]; do
    if [[ $line == "Begin Limit" ]]; then
        in_block=true
        block_lines=("$line") # Start a new block
    elif [[ $line == "End Limit" ]]; then
        in_block=false
        block_lines+=("$line") # End the block
        process_block           # Process the block
        block_lines=()          # Reset block storage
    elif $in_block; then
        block_lines+=("$line")  # Add line to the block
    else
        echo "$line"            # Output non-block lines
    fi
done < "$input_file" > "$output_file"

echo "Processed file saved to $output_file."
