#!/bin/bash
# --------------------------------------------------------------------
# Script: xenserver_pool_report.sh
# Purpose: Collect CPU, Memory, Model Name, and VM details from all XenServer hosts
# --------------------------------------------------------------------

if [ $# -lt 1 ]; then
  echo "Usage: $0 <xenserver-host> [username]"
  exit 1
fi

HOST="$1"
USER="${2:-root}"
OUTPUT_FILE="xenserver_pool_report.csv"
REMOTE_FILE="/tmp/xenserver_pool_report.csv"

echo "Connecting to XenServer: $HOST as $USER..."
echo "Generating report... please wait."

ssh -o BatchMode=yes -o ConnectTimeout=10 ${USER}@${HOST} 'bash -s' << 'EOF'
set -e
source /etc/profile || true
XE_BIN=$(command -v xe || echo "/opt/xensource/bin/xe")

OUTPUT_FILE="/tmp/xenserver_pool_report.csv"
echo "Host Name,CPU Model,CPU Count,Total Memory (GB),Free Memory (GB),Running VMs,Uptime (Days)" > "$OUTPUT_FILE"

for host in $($XE_BIN host-list --minimal | tr , ' '); do
    name=$($XE_BIN host-param-get uuid=$host param-name=name-label)
    cpu_info=$($XE_BIN host-param-get uuid=$host param-name=cpu-info)
    cpu_model=$(echo "$cpu_info" | grep "modelname:" | head -n1 | cut -d: -f2- | sed "s/^ *//")
    cpu_count=$(echo "$cpu_info" | grep -o "cpu_count: [0-9]*" | awk "{print \$2}")
    total_mem=$($XE_BIN host-param-get uuid=$host param-name=memory-total)
    free_mem=$($XE_BIN host-param-get uuid=$host param-name=memory-free)
    vm_count=$($XE_BIN vm-list resident-on=$host is-control-domain=false --minimal | tr , '\n' | wc -l)
    uptime_seconds=$($XE_BIN host-param-get uuid=$host param-name=uptime)
    uptime_days=$(awk "BEGIN {printf \"%.2f\", $uptime_seconds/86400}")
    total_mem_gb=$(awk "BEGIN {printf \"%.2f\", $total_mem/1024/1024/1024}")
    free_mem_gb=$(awk "BEGIN {printf \"%.2f\", $free_mem/1024/1024/1024}")

    echo "$name,$cpu_model,$cpu_count,$total_mem_gb,$free_mem_gb,$vm_count,$uptime_days" >> "$OUTPUT_FILE"
done

total_vms=$($XE_BIN vm-list is-control-domain=false --minimal | tr , '\n' | wc -l)
echo "Total,,,,,$total_vms," >> "$OUTPUT_FILE"
EOF

# Copy the file back
scp -q ${USER}@${HOST}:${REMOTE_FILE} "./${OUTPUT_FILE}" 2>/dev/null

if [ -f "./${OUTPUT_FILE}" ]; then
  echo "✅ Report generated: $(pwd)/${OUTPUT_FILE}"
else
  echo "❌ Report not found. Let's debug:"
  echo "Try running this manually:"
  echo "ssh ${USER}@${HOST} '/opt/xensource/bin/xe host-list'"
fi
