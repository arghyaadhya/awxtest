#!/bin/bash
# ---------------------------------------------------------------------
# Citrix XenServer / Hypervisor Multi-Pool SSH Collector (Final Version + Daily Append + Midnight Rotation)
# ---------------------------------------------------------------------
# SAME FUNCTIONALITY AS ORIGINAL + THESE ADDITIONS:
#  - Appends all runs for the day into xenpool_final_merged.csv
#  - At midnight, tar.gz backup created with timestamp and new file started
# ---------------------------------------------------------------------

LOCKFILE="/tmp/xenpool_collect.lock"
if [ -e "$LOCKFILE" ] && kill -0 "$(cat "$LOCKFILE")" 2>/dev/null; then
  echo "Another xenpool_collect run is still in progress. Exiting safely."
  exit 0
fi
echo $$ > "$LOCKFILE"
trap 'rm -f "$LOCKFILE"' EXIT

# ---------------- Configuration ----------------
USER="root"
PASS="justD0it!"
SSHPASS_BIN="/usr/bin/sshpass"
SERVER_LIST="/u/arghyaa/working-script/xs_report/servers.txt"
SSH_TIMEOUT=15
USE_SSH_KEY=false
TMP_DIR="/SCRATCH/report/xenpool_collect_tmp"
BACKUP_DIR="/SCRATCH/report/xenpool_collect_backup"
DATESTAMP=$(date +%Y-%m-%d_%H-%M)
TODAY=$(date +%Y-%m-%d)
MASTER_INDEX="$TMP_DIR/xenpool_index_${DATESTAMP}.csv"
NET_SAMPLE_SEC=2
MERGED_CSV="${TMP_DIR}/xenpool_final_merged.csv"
# ------------------------------------------------

mkdir -p "$TMP_DIR" "$BACKUP_DIR"
> "$MASTER_INDEX"

[[ ! -f "$SERVER_LIST" ]] && { echo "Error: $SERVER_LIST not found!"; exit 1; }

echo "=============================================================="
echo " Citrix XenServer Multi-Pool SSH Collector (Final + Daily Append)"
echo "=============================================================="

# ---- Check for midnight rotation ----
LAST_MOD_DATE=""
[[ -f "$MERGED_CSV" ]] && LAST_MOD_DATE=$(date -r "$MERGED_CSV" +%Y-%m-%d)

if [[ "$LAST_MOD_DATE" != "$TODAY" && -f "$MERGED_CSV" ]]; then
  echo "Date rollover detected (previous: $LAST_MOD_DATE, current: $TODAY)"
  TS=$(date -r "$MERGED_CSV" +%Y-%m-%d_%H%M)
  TAR_FILE="${BACKUP_DIR}/xenpool_final_merged_${TS}.tar.gz"
  echo "Archiving old xenpool_final_merged.csv to $TAR_FILE ..."
  tar -czf "$TAR_FILE" -C "$TMP_DIR" "$(basename "$MERGED_CSV")"
  echo "Archive created successfully."
  rm -f "$MERGED_CSV"
  echo "Starting new daily report file..."
fi

# --- Remote Script (UNCHANGED) ---
read -r -d '' REMOTE_SCRIPT <<'EOF'
# [REMOTE SCRIPT CONTENT UNCHANGED â€“ OMITTED FOR BREVITY]
EOF

# --- Collect data (UNCHANGED LOGIC) ---
while read -r server; do
  [[ -z "$server" || "$server" =~ ^\s*# ]] && continue
  echo "Collecting data from $server ..."
  if [[ "$USE_SSH_KEY" == true ]]; then
    result=$(ssh -o ConnectTimeout=$SSH_TIMEOUT "$USER@$server" "bash -s" <<< "$REMOTE_SCRIPT" 2>/dev/null)
  else
    result=$($SSHPASS_BIN -p "$PASS" ssh -o StrictHostKeyChecking=no -o ConnectTimeout=$SSH_TIMEOUT "$USER@$server" "bash -s" <<< "$REMOTE_SCRIPT" 2>/dev/null)
  fi
  pool_name=$(echo "$result" | awk -F',' '{print $1}')
  remote_csv=$(echo "$result" | awk -F',' '{print $2}')
  [[ -z "$pool_name" || -z "$remote_csv" ]] && continue
  clean_pool=$(echo "$pool_name" | tr -dc 'A-Za-z0-9_-')
  local_csv="${TMP_DIR}/${clean_pool}_${DATESTAMP}.csv"
  $SSHPASS_BIN -p "$PASS" scp -o StrictHostKeyChecking=no -o ConnectTimeout=$SSH_TIMEOUT "$USER@$server:$remote_csv" "$local_csv" >/dev/null 2>&1
  [[ -f "$local_csv" ]] && echo "${pool_name},${server},${local_csv}" >> "$MASTER_INDEX"
done < <(grep -v '^\s*#' "$SERVER_LIST" | sed '/^\s*$/d')

# ------------------------------------------------------------------
# Merge all collected per-pool CSVs (UNCHANGED)
# ------------------------------------------------------------------
TMP_HOSTS="${TMP_DIR}/tmp_hosts_merge.csv"
TMP_NFS="${TMP_DIR}/tmp_nfs_merge.csv"
TMP_SUMMARY="${TMP_DIR}/tmp_summary_merge.csv"
> "$TMP_HOSTS"; > "$TMP_NFS"; > "$TMP_SUMMARY"

while IFS=, read -r pool_name server csv_file; do
  [[ -z "$csv_file" || ! -f "$csv_file" ]] && continue
  awk -F, '/^poolhost,/ {print}' "$csv_file" >> "$TMP_HOSTS"
  awk -F, '/^nfs,/ {print}' "$csv_file" >> "$TMP_NFS"
  awk -F, '/^summary,/ {print}' "$csv_file" >> "$TMP_SUMMARY"
done < "$MASTER_INDEX"

sort -t, -k3,3 "$TMP_HOSTS" -o "$TMP_HOSTS"
sort -t, -k3,3 "$TMP_NFS" -o "$TMP_NFS"
sort -t, -k3,3 "$TMP_SUMMARY" -o "$TMP_SUMMARY"

# Append mode (instead of overwrite)
{
  echo "### Run Timestamp: ${DATESTAMP}"
  echo "#HOST DETAILS (All Pools)"
  echo "#KEYWORD,SITE NAME,POOL NAME,HOST NAME,CPU,CPU_MODEL,DOM0_CPU,LOAD_AVG,CTRL_MEM(GB),USED_MEM(GB),FREE_MEM(GB),TOTAL_MEM(GB),RUNNING_VM,HYPERTHREADING,UPTIME_DAYS,ETH0_STATUS,ETH0_SPEED,ETH0_MAC,ETH1_STATUS,ETH1_SPEED,ETH1_MAC,BOND0_STATUS,BOND0_SPEED,CPU_UTIL(%),MEM_UTIL(%),NET_UTIL(%),SR NAME,SR TOTAL(GB),SR USED(GB),SR FREE(GB),SR TYPE"
  cat "$TMP_HOSTS"
  echo ""
  echo "#NFS REPOSITORIES (All Pools)"
  echo "#KEYWORD,SITE NAME,POOL NAME,SR NAME,TOTAL(GB),USED(GB),FREE(GB)"
  cat "$TMP_NFS"
  echo ""
  echo "#POOL SUMMARY (All Pools)"
  echo "#KEYWORD,SITE NAME,POOL NAME,CPU Cores,Memory Total (GB),Memory Used (GB),Memory Free (GB),Usable Memory (GB),SR Used (GB),SR Free (GB),Running VMs,16GB VM Capacity (Approx),32GB VM Capacity (Approx),CPU Utilization (%),Memory Utilization (%),Network Utilization (%)"
  cat "$TMP_SUMMARY"
  echo ""
} >> "$MERGED_CSV"

echo "Data appended successfully to: $MERGED_CSV"

# ------------------------------------------------------------------
# Cleanup (UNCHANGED)
# ------------------------------------------------------------------
echo ""
echo "Starting cleanup of temporary files..."

mapfile -t SERVER_ARRAY < <(grep -v '^\s*#' "$SERVER_LIST" | sed '/^\s*$/d')
for server in "${SERVER_ARRAY[@]}"; do
  [[ -z "$server" ]] && continue
  echo "Cleaning remote temporary files on $server ..."
  if [[ "$USE_SSH_KEY" == true ]]; then
    ssh -o ConnectTimeout=$SSH_TIMEOUT "$USER@$server" \
      "rm -f /tmp/xenpool_summary_*.csv >/dev/null 2>&1"
  else
    $SSHPASS_BIN -p "$PASS" ssh -o StrictHostKeyChecking=no -o ConnectTimeout=$SSH_TIMEOUT "$USER@$server" \
      "rm -f /tmp/xenpool_summary_*.csv >/dev/null 2>&1"
  fi
done

echo "Cleaning local temp directory: $TMP_DIR ..."
find "$TMP_DIR" -type f -name "xenpool_index_*.csv" -delete
find "$TMP_DIR" -type f -name "tmp_*_merge.csv" -delete

echo "Cleanup completed. Only main and archive files retained."

cp "$MERGED_CSV" /u/arghyaa/ctx-report/ 2>/dev/null

exit 0
