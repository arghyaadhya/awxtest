# --- Case-insensitive VM classification with safe logic + debug cleanup
  vm_32gb_count=0
  vm_16_abcvde_count=0
  vm_16_abcvder_count=0

  debug_file="/tmp/vm_memory_debug_${host_name}.txt"
  > "$debug_file"

  # Collect VM memory info safely
  for vm_uuid in $(xe vm-list resident-on="$uuid" power-state=running --minimal | tr ',' ' '); do
    [[ -z "$vm_uuid" ]] && continue

    vm_name=$(xe vm-param-get uuid="$vm_uuid" param-name=name-label 2>/dev/null)
    mem_bytes=$(xe vm-param-get uuid="$vm_uuid" param-name=memory-static-max 2>/dev/null)

    # Validate numeric memory value
    if ! [[ "$mem_bytes" =~ ^[0-9]+$ ]]; then
      echo "$vm_name,INVALID_MEM" >> "$debug_file"
      continue
    fi

    # Convert bytes â†’ GB (integer division)
    mem_gb=$((mem_bytes / 1024 / 1024 / 1024))
    echo "$vm_name,$mem_gb" >> "$debug_file"
  done

  # Parse the debug file and count
  while IFS=',' read -r vm_name mem_gb; do
    [[ -z "$vm_name" || -z "$mem_gb" ]] && continue
    [[ "$mem_gb" == "INVALID_MEM" ]] && continue

    if [[ "$mem_gb" -eq 32 ]]; then
      ((vm_32gb_count++))
    elif [[ "$mem_gb" -eq 16 ]]; then
      if echo "$vm_name" | grep -qi "ABCvDER"; then
        ((vm_16_abcvder_count++))
      elif echo "$vm_name" | grep -qi "ABCvDE" && ! echo "$vm_name" | grep -qi "ABCvDER"; then
        ((vm_16_abcvde_count++))
      fi
    fi
  done < "$debug_file"

  # Remove debug file after successful counting
  rm -f "$debug_file"
